@model ICollection<Review>


@{
	Layout = "_DetailLayout.cshtml";
	// var reviews = ViewData["reviews"] as List<Review> ?? new List<Review>();
	var company = ViewData["company"] as Company;
	var totalReviews = Model.Count();

	var stats = ViewData["stats"] as ReviewSummaryStats;
	var avg = stats?.Overall?.Average ?? 0;
	var fullStars = (int)Math.Floor(avg);

	var total = totalReviews;
	var percent = avg * 20; // vì 5 sao = 100%

	var ratingCategories = new List<(string Label, string PropertyName, double Avg)>
	{
		("Lương thưởng & phúc lợi", "Salary", stats?.Salary?.Average ?? 0),
		("Đào tạo & học hỏi", "Training", stats?.Training?.Average ?? 0),
		("Sự quan tâm đến nhân viên", "Management", stats?.Management?.Average ?? 0),
		("Văn hoá công ty", "Culture", stats?.Culture?.Average ?? 0),
		("Văn phòng làm việc", "Office", stats?.Office?.Average ?? 0)
	};


	int currentPage = (int)(ViewData["CurrentPage"] ?? 1);
	int totalPages = (int)(ViewData["TotalPages"] ?? 1);
	string slug = (ViewData["company"] as Company)?.Slug;
}

<!-- / Sections -->
<div class="review-rating-container bg-it-white box-shadow-medium border-radius-large-xl imb-5 ipx-xl-6 ipt-xl-6 user-select-none">
	<h2 class="text-it-black ipb-4 ips-5 ipt-6 ips-xl-0 ipt-xl-0">Đánh giá chung</h2>
	<div class="row flex-column flex-xl-row imx-xl-0 imx-5 ipy-6 border-top-dashed border-bottom-dashed">
		<div class="col col-xl-8 ipx-0 ipx-xl-0">
			<div class="d-flex">
				<div class="review-stars-rating d-flex flex-column justify-content-center align-items-center igap-2 ims-8">
					<p class="lg-title text-it-black lh-1">@avg.ToString("0.0")</p>

					<div class="box-star-icons text-warning-color position-relative box-icon-lg stroke-width-1">
						@await Html.PartialAsync("_RatingStars", new RatingStarViewModel
 {
	 Rating = fullStars,
	 IconClass = "icon-lg stroke-width-1"
 })
						<div class="d-flex align-items-center overflow-hidden position-absolute"
							 style="width: @percent.ToString("0.0")%;">
							@await Html.PartialAsync("_RatingStars", new RatingStarViewModel
  {
	  Rating = fullStars,
	  IconClass = "icon-lg stroke-width-1",
	  ContainerClass = "text-warning-color"
  })
						</div>
					</div>

					<div class="normal-text">
						@totalReviews đánh giá
					</div>
				</div>
				<div class="w-100 d-block ims-8 w-xl-auto">

					@if (stats?.Overall != null)
					{
						for (int i = 5; i >= 1; i--)
						{
							var per = stats.Overall.Percentages != null && stats.Overall.Percentages.ContainsKey(i)
							? stats.Overall.Percentages[i]
							: 0;

							<a class="normal-text d-flex align-items-baseline igap-3 text-it-black imt-1">
								<div class="d-flex align-items-center gap-1">
									@i
									<i class="feather-icon icon-sm text-warning-color fill" data-feather="star"></i>
								</div>
								<div class="progress-line-bar bg-light-warning-color border-radius-normal">
									<div class="line bg-warning-color border-radius-normal h-100"
										 style="width: @per% !important;"></div>
								</div>
								<div class="rating-percent-wrapper">@per%</div>
							</a>
						}
					}

					else
					{
						<p class="text-muted">Chưa có đánh giá nào.</p>
					}
				</div>

			</div>
		</div>
		@if (false)
		{
			<div class="vr imx-6 d-none d-xl-inline-block text-silver-grey"></div>

			<div class="col col-xl-4 ips-8 ipx-xl-0 my-xl-auto mt-2 mt-xl-auto">
				<table>
					<tbody>
						<tr>
							<td class="position-relative text-center" style="width: 88px; height: 88px;">
								<canvas id="ratingChart" width="88" height="88"></canvas>
								<div class="position-absolute top-50 start-50 translate-middle h5 m-0 text-success-color h1">
									<span id="ratingPercent">88</span><span class="small-text">%</span>
								</div>
							</td>
							<td class="text-it-black ips-8 ips-xl-3">Khuyến khích làm việc tại đây</td>
						</tr>
					</tbody>
				</table>
			</div>
		}

		<div class="collapse p-0" id="ratingDetails">
			<div class="rating-details row m-0 p-0 imt-8 border-radius-normal border-solid"
				 data-controller="reviews--rating">
				<div class="col-xl-7 p-0 accordion accordion-flush" id="accordionRatingDetails">

					@foreach (var (label, key, avg2) in ratingCategories)
					{
						var percentages = stats?.GetType().GetProperty(key)?.GetValue(stats) as RatingDetailStats;

						<div class="review-category-item accordion-item position-relative cursor-default text-it-black ipe-xl-8 ips-4 ipy-3 ipb-xl-3 d-flex align-items-xl-center flex-column flex-xl-row igap-xl-0">
							<div class="category-item-box d-none d-xl-block">@label</div>

							<div class="d-flex igap-2 ms-0 imb-xl-0 ms-xl-auto">
								<div class="box-star-icons text-silver-grey position-relative box-icon-md stroke-width-1">
									@*
									@for (int i = 0; i < 5; i++)
									{
										<i class="feather-icon icon-sm stroke-width-1" data-feather="star"></i>
									}

									*@
									@await Html.PartialAsync("_RatingStars", new RatingStarViewModel
   {
	   Rating = (int)avg2,
	   IconClass = "icon-sm stroke-width-1",
	   ContainerClass = "text-warning-color"
   })
								</div>
								@*
								<div class="d-flex align-items-center overflow-hidden position-absolute" style="width: @(Math.Round(avg2 / 5 * 100))%;">
									<div class="star-icons text-warning-color">
										@for (int i = 0; i < 5; i++)
										{
											<i class="feather-icon icon-sm stroke-width-1 fill" data-feather="star"></i>
										}
									</div>
								</div>

								*@
								<span class="normal-text ms-2">@avg2.ToString("0.0")</span>
							</div>
						</div>

						<div class="d-xl-none accordion-collapse collapse ipe-4">
							<div class="imt-4">
								<h4 class="text-it-black">Đánh giá chi tiết</h4>
								@for (int i = 5; i >= 1; i--)
								{
									var p = percentages?.Percentages.ContainsKey(i) == true ? percentages.Percentages[i] : 0;

									<a class="normal-text d-flex align-items-baseline igap-3 text-it-black imt-3">
										<div class="d-flex align-items-center gap-1">
											@i
											<i class="feather-icon icon-sm text-warning-color fill" data-feather="star"></i>
										</div>
										<div class="progress-line-bar bg-light-warning-color border-radius-normal flex-grow-1">
											<div class="line bg-warning-color border-radius-normal h-100" style="width: @p%!important;"></div>
										</div>
										<div class="rating-percent-wrapper rating-percent-text">@p%</div>
									</a>
								}
							</div>
						</div>
					}

				</div>

				<div class="col-xl-5 ip5 position-relative overflow-hidden d-none d-xl-block">
					@await Html.PartialAsync("_RatingBreakdown", ("Salary_Benefit_Rate", stats?.Salary))
					@await Html.PartialAsync("_RatingBreakdown", ("Training_Learning_Rate", stats?.Training))
					@await Html.PartialAsync("_RatingBreakdown", ("Management_Care_Rate", stats?.Management))
					@await Html.PartialAsync("_RatingBreakdown", ("Culture_Fun_Rate", stats?.Culture))
					@await Html.PartialAsync("_RatingBreakdown", ("Office_Workspace_Rate", stats?.Office))
				</div>
			</div>
		</div>
	</div>
	<div class="d-flex ipy-4">
		<button class="hyperlink w-auto p-0 border-0 bg-transparent d-inline-flex align-items-center igap-1 mx-auto user-select-none" type="button" id="toggleRatingDetails">
			<span class="normal-text" data-show-more-collapse-target="text">Xem thêm</span>
			<div class="align-self-end ipt-1 lh-1">
				<i class="feather-icon icon-md" data-feather="chevron-down"></i>
			</div>
		</button>
	</div>
</div>


@if (Model.Any())
{

	<div class="bg-it-white box-shadow-medium border-radius-large-xl ipx-5 ipt-6 ipb-8 imb-5 ip-xl-6 ipb-xl-8 reviews-list-container user-select-none">
		<div class="d-lg-flex justify-content-lg-between align-items-lg-center w-100 border-bottom-dashed ipb-4">
			<h2 class="imb-1 imb-lg-0 text-it-black">
				@totalReviews đánh giá
			</h2>
			<div class="filter-box align-items-center" data-controller="reviews--filter"
				 data-reviews--filter-target="box">
				<span class="ime-2 text-it-black">
					Tìm kiếm
				</span>
				<button class="small-text itag itag-md itag-light" data-action="click->reviews--filter#filterOT">
					<span class="hidden d-none filtered-mark">x</span>
					<span class="text">OT</span>
				</button>
			</div>

		</div>
		@foreach (var review in Model)
		{
			<div class="py-4 border-bottom-dashed">
				<div class="ipb-4">
					<span class="ifs-14 text-dark-grey fw-400">
						@review.CreatedAt.ToString("MMMM yyyy", new System.Globalization.CultureInfo("vi-VN"))
					</span>
					<h3 class="text-it-black">@review.Summary</h3>

					<div class="d-flex align-items-center imt-1">
						<div class="stars d-flex align-items-center text-it-black">
							<div class="box-star-icons text-warning-color position-relative box-icon-sm">
								@await Html.PartialAsync("_RatingStars", new RatingStarViewModel { Rating = review.OverallRating })
								<div class="d-flex align-items-center overflow-hidden position-absolute" style="width: @(review.OverallRating * 20)%;">
									@await Html.PartialAsync("_RatingStars", new RatingStarViewModel
  {
	  ContainerClass = "text-warning-color",
	  Rating = review.OverallRating
  })
								</div>
							</div>
							<p class="ims-3 ime-1">@review.OverallRating</p>
							<div class="rating-dropdown d-block">
								<i class="feather-icon icon-sm" data-feather="chevron-down"></i>
							</div>
							<ul class="detail-rating-tooltip small-text py-2 px-4">
								@await Html.PartialAsync("_RatingItem", new RatingItemViewModel("Lương thưởng & phúc lợi", review.SalaryRating))
								@await Html.PartialAsync("_RatingItem", new RatingItemViewModel("Đào tạo & học hỏi", review.TrainingRating))
								@await Html.PartialAsync("_RatingItem", new RatingItemViewModel("Sự quan tâm đến nhân viên", review.ManagementRating))
								@await Html.PartialAsync("_RatingItem", new RatingItemViewModel("Văn hoá công ty", review.CultureRating))
								@await Html.PartialAsync("_RatingItem", new RatingItemViewModel("Văn phòng làm việc", review.OfficeRating))
							</ul>
						</div>
						@if (review.RecommendToFriends)
						{
							<div class="recommend-icon-wrapper ms-3">
								<i class="feather-icon icon-sm" data-feather="thumbs-up"></i>
								Khuyến khích
							</div>
						}
					</div>

					<div class="imt-3">
						<h4 class="text-it-black">Điều tôi thích:</h4>
						<p>@Html.Raw(review.Experience)</p>
					</div>
					<div class="imt-3">
						<h4 class="text-it-black">Đề nghị cải thiện:</h4>
						<p>@Html.Raw(review.Suggestion)</p>
					</div>

				</div>
				@if (!string.IsNullOrEmpty(review.CompanyReply))
				{
					<div class="replies-feedback imt-4 ipt-6 ims-4 d-flex align-items-lg-center align-items-start text-it-black">
						<div class="ime-4">
							<img class="employer-logo" alt="Samsung Electronics HCMC CE Complex Vietnam Small Logo" src="@company.LogoFullPath" />
						</div>
						<div>
							<h4>
								Phản hồi từ @company.FullName
							</h4>
							<div class="content paragraph text-it-black">
								@Html.Raw(review.CompanyReply)
							</div>
						</div>
					</div>
				}

			</div>
		}

		@if (totalPages > 1)
		{
			<div class="text-center d-flex justify-content-center ipt-8">
				<nav class="ipagination mt-4">
					@if (currentPage > 1)
					{
						<div class="page prev">
							<a asp-action="Review" asp-controller="Company" asp-area="User/Companies"  asp-route-slug="@company.Slug" asp-route-page="@(currentPage - 1)">
								<i class="feather-icon icon-sm" data-feather="chevron-left"></i>	
							</a>
						</div>
					}

					@for (int i = 1; i <= totalPages; i++)
					{
						if (i == currentPage)
						{
							<div class="page current">@i</div>
						}
						else
						{
							<div class="page">
								<a asp-action="Review" asp-controller="Company" asp-area="User/Companies" asp-route-slug="@company.Slug" asp-route-page="@i">@i</a>
							</div>
						}
					}

					@if (currentPage < totalPages)
					{
						<div class="page next">
							<a asp-action="Review" asp-controller="Company" asp-area="User/Companies" asp-route-slug="@company.Slug" asp-route-page="@(currentPage + 1)">
								<i class="feather-icon icon-sm" data-feather="chevron-right"></i>
							</a>
						</div>
					}
				</nav>
			</div>
		}

	</div>

}
else
{
	<div class="bg-it-white box-shadow-medium border-radius-large-md ipy-6 ipx-5 imb-5 ip-xl-6"
		 id="let-your-voice-section">
		<div class="d-flex flex-row igap-5">
			<div class="d-xl-block d-none">
				<img alt="robby-success" src="~/images/icons/robby-apply-success.svg" width="80" height="80" />
			</div>
			<div class="d-flex flex-column">
				<div class="h3">
					Hãy dành 1 phút để chia sẻ trải nghiệm làm việc của bạn tại ELCA
				</div>
				<p class="paragraph imy-2">
				</p>
				<section class="imy-4 d-flex flex-xl-row flex-column align-items-start igap-2 igap-xl-4 align-items-xl-center">
					<div class="star-rating d-flex justify-content-start over-all-rat flex-row-reverse">

						@for (int i = 5; i >= 1; i--)
						{
							<a class="star @($"start{i}")" asp-action="New" asp-route-slug="@company.Slug" asp-route-star="@i">
								<span></span>
							</a>
						}

					</div>
					<p class="text-dark-grey imt-xl-0 imt-2 imt-xl-4">Nhấn để bắt đầu đánh giá</p>
				</section>
				<div class="d-flex igap-2">
					<span>
						<i class="feather-icon icon-md text-dark-grey" data-feather="alert-circle"></i>
					</span>
					<span class="text-rich-grey small-text">Đánh giá của bạn cho ELCA sẽ được gửi ẩn danh.</span>
				</div>
			</div>
		</div>
	</div>


}



<div class="ip-xl-6 ipx-5 ipy-6 bg-it-white border-radius-large-md imb-xl-8 imb-5">
	<div class="d-flex igap-4 flex-column-reverse flex-xl-row align-items-center igap-xl-5">
		<div class="d-flex flex-column">
			<div class="h4 imb-3">Về chức năng Đánh giá Công ty trên ITviec</div>
			<div class="small-text text-rich-grey align-middle">
				ITviec cho phép nhân viên hiện tại và cựu nhân viên
				đánh giá môi trường làm việc, văn hóa công ty, và chất lượng quản lý. Những đánh giá này bao gồm cả
				điểm số và nhận xét chi tiết, giúp người dùng dễ dàng so sánh và lựa chọn công ty phù hợp với nhu
				cầu và mong muốn của mình.
			</div>
		</div>
		<img alt="robby-success" src="~/images/icons/icon-good-feedback.svg" width="80" height="80" />
	</div>
</div>


@section Scripts {
	<script>
		$(document).ready(function () {
			$('#toggleRatingDetails').on('click', function () {
				const $button = $(this);
				const $target = $('#ratingDetails');

				$target.toggleClass('show');

				if ($target.hasClass('show')) {
					$button.removeClass('collapsed');
				} else {
					$button.addClass('collapsed');
				}
			});


			$('#accordionRatingDetails').on('mouseenter', '.review-category-item', function () {
				// Bỏ active cũ
				$('.review-category-item').removeClass('active');
				$('.rating-detail-wrapper').removeClass('active');

				// Thêm active cho item đang hover
				$(this).addClass('active');

				// Lấy index theo .review-category-item, không theo sibling
				const index = $('.review-category-item').index(this);
				console.log('Index chuẩn:', index);

				// Kích hoạt phần chi tiết tương ứng
				$('.rating-detail-wrapper').eq(index).addClass('active');
			});


			const $canvas = $("#ratingChart");
			const $percentText = $("#ratingPercent");
			const target = parseFloat($percentText.text()) || 0;

			// Chart.js
			new Chart($canvas[0].getContext("2d"), {
				type: "doughnut",
				data: {
					datasets: [{
						data: [target, 100 - target],
						backgroundColor: ["#28a745", "#e9ecef"],
						borderWidth: 0
					}]
				},
				options: {
					cutout: "75%",
					responsive: false,
					plugins: {
						legend: { display: false },
						tooltip: { enabled: false }
					}
				}
			});

			// CountUp.js
			const counter = new countUp.CountUp("ratingPercent", target, {
				duration: 1,
				suffix: ''
			});

			if (!counter.error) {
				counter.start();
			} else {
				console.error(counter.error);
			}
		});
	</script>
}